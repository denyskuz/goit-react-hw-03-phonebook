{"ast":null,"code":"var _jsxFileName = \"/Users/denys/Sites/GOIT/ReactJSCourses/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.js\";\nimport { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport classes from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ContactForm extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Any place in your app!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Formik //   initialValues={{ email: '', password: '' }}\n      , {\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          console.log('values', values);\n        },\n        children: _ref2 => {\n          let {\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","Formik","Form","Field","ErrorMessage","classes","ContactForm","render","values","errors","email","test","setSubmitting","console","log","isSubmitting"],"sources":["/Users/denys/Sites/GOIT/ReactJSCourses/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.js"],"sourcesContent":["import { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport classes from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n \n    render() {\n        return (\n  <div>\n    <h1>Any place in your app!</h1>\n    <Formik\n    //   initialValues={{ email: '', password: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n          console.log('values', values);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  </div>\n        );\n    }\n}"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,eAAe,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;EAE/CO,MAAM,GAAG;IACL,oBACN;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD,CACA;MADA;QAEE,QAAQ,EAAEC,MAAM,IAAI;UAClB,MAAMC,MAAM,GAAG,EAAf;;UACA,IAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;YACjBD,MAAM,CAACC,KAAP,GAAe,UAAf;UACD,CAFD,MAEO,IACL,CAAC,2CAA2CC,IAA3C,CAAgDH,MAAM,CAACE,KAAvD,CADI,EAEL;YACAD,MAAM,CAACC,KAAP,GAAe,uBAAf;UACD;;UACD,OAAOD,MAAP;QACD,CAZH;QAaE,QAAQ,EAAE,CAACD,MAAD,WAA+B;UAAA,IAAtB;YAAEI;UAAF,CAAsB;UACrCC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,MAAtB;QACH,CAfH;QAAA,UAiBG;UAAA,IAAC;YAAEO;UAAF,CAAD;UAAA,oBACC,QAAC,IAAD;YAAA,wBACE,QAAC,KAAD;cAAO,IAAI,EAAC,OAAZ;cAAoB,IAAI,EAAC;YAAzB;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,YAAD;cAAc,IAAI,EAAC,OAAnB;cAA2B,SAAS,EAAC;YAArC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE,QAAC,KAAD;cAAO,IAAI,EAAC,UAAZ;cAAuB,IAAI,EAAC;YAA5B;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE,QAAC,YAAD;cAAc,IAAI,EAAC,UAAnB;cAA8B,SAAS,EAAC;YAAxC;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAQ,IAAI,EAAC,QAAb;cAAsB,QAAQ,EAAEA,YAAhC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;MAjBH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADM;EAkCH;;AArC8C"},"metadata":{},"sourceType":"module"}